/**
 * // This is the MountainArray's API interface.
 * // You should not implement it, or speculate about its implementation
 * class MountainArray {
 *   public:
 *     int get(int index);
 *     int length();
 * };
 */

class Solution {
private: 
    int binarysearch2(MountainArray &arr, int start, int end,int target){
        int mid;
        while(start<=end){
            mid = start + (end- start )/2;
            if(arr.get(mid) == target) return mid;
            else if(arr.get(mid)<target) end = mid-1;
            else start = mid+1;
        }
       return 0;
    }
    int binarysearch(MountainArray &arr, int start, int end,int target){
        int mid;
        while(start<=end){
            mid = start + (end- start )/2;
            if(arr.get(mid) == target) return mid;
            else if(arr.get(mid)>target) end = mid-1;
            else start = mid+1;
        }
       return 0;
    }
public:
    int findInMountainArray(int target, MountainArray &mountainArr) {
        if(target == mountainArr.get(0)) return 0;
        int start = 0;
        int end = mountainArr.length()-1;
        int mid ;
        while(start<end){
            mid = start + (end- start)/2;
            if(mountainArr.get(mid+1)> mountainArr.get(mid)){
                start = mid + 1;
            }
            else end = mid;
        }
        int a = binarysearch(mountainArr, 0, start, target);
        int b = binarysearch2(mountainArr, start+1, mountainArr.length()-1, target);

        if(a!= 0) return a;
        else if(b != 0) return b;
        else return -1;      
    }
};
